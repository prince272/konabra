basePath: /
definitions:
  services.ChangeAccountForm:
    properties:
      newUsername:
        maxLength: 256
        type: string
    required:
    - newUsername
    type: object
  services.ChangePasswordForm:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    required:
    - newPassword
    - oldPassword
    type: object
  services.CompleteChangeAccountForm:
    properties:
      code:
        type: string
      newUsername:
        maxLength: 256
        type: string
    required:
    - code
    - newUsername
    type: object
  services.CompleteResetPasswordForm:
    properties:
      code:
        type: string
      newPassword:
        type: string
      username:
        maxLength: 256
        type: string
      validateOnly:
        type: boolean
    required:
    - code
    - newPassword
    - username
    type: object
  services.CompleteVerifyAccountForm:
    properties:
      code:
        type: string
      username:
        maxLength: 256
        type: string
    required:
    - code
    - username
    type: object
  services.CreateAccountForm:
    properties:
      firstName:
        maxLength: 256
        type: string
      lastName:
        maxLength: 256
        type: string
      password:
        type: string
      username:
        maxLength: 256
        type: string
      validateOnly:
        type: boolean
    required:
    - firstName
    - lastName
    - password
    - username
    type: object
  services.ResetPasswordForm:
    properties:
      username:
        maxLength: 256
        type: string
    required:
    - username
    type: object
  services.SignInForm:
    properties:
      password:
        type: string
      username:
        maxLength: 256
        type: string
    required:
    - password
    - username
    type: object
  services.SignInWithRefreshTokenForm:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  services.SignOutForm:
    properties:
      global:
        type: boolean
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  services.VerifyAccountForm:
    properties:
      username:
        maxLength: 256
        type: string
    required:
    - username
    type: object
info:
  contact: {}
  description: Konabra is a smart, community-powered transport and road safety platform
    for Ghana. This API supports live incident reporting, road condition updates,
    and data analytics integration.
  title: Konabra API
  version: "1.0"
paths:
  /account/change:
    post:
      consumes:
      - application/json
      description: Starts the process of changing account email or phone number
      parameters:
      - description: Account change details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/services.ChangeAccountForm'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Initiate account change
      tags:
      - Account
  /account/change/complete:
    post:
      consumes:
      - application/json
      description: Completes the process of changing account email or phone number
      parameters:
      - description: Account change completion details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/services.CompleteChangeAccountForm'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Complete account change
      tags:
      - Account
  /account/create:
    post:
      consumes:
      - application/json
      description: Creates a new user account with the provided details
      parameters:
      - description: Account creation details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/services.CreateAccountForm'
      produces:
      - application/json
      responses: {}
      summary: Create a new user account
      tags:
      - Account
  /account/current:
    delete:
      consumes:
      - application/json
      description: Deletes the authenticated user's account permanently
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Delete the current user account
      tags:
      - Account
    get:
      consumes:
      - application/json
      description: Retrieves details of the authenticated user
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get current user account
      tags:
      - Account
  /account/password/change:
    post:
      consumes:
      - application/json
      description: Changes the password for the authenticated user
      parameters:
      - description: Password change details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/services.ChangePasswordForm'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Change the current password
      tags:
      - Account
  /account/password/reset:
    post:
      consumes:
      - application/json
      description: Starts the process of resetting the password for the account
      parameters:
      - description: Password reset details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/services.ResetPasswordForm'
      produces:
      - application/json
      responses: {}
      summary: Initiate password reset
      tags:
      - Account
  /account/password/reset/complete:
    post:
      consumes:
      - application/json
      description: Completes the password reset process using the received token
      parameters:
      - description: Password reset completion details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/services.CompleteResetPasswordForm'
      produces:
      - application/json
      responses: {}
      summary: Complete password reset
      tags:
      - Account
  /account/signin:
    post:
      consumes:
      - application/json
      description: Authenticates a user with email and password
      parameters:
      - description: Sign-in credentials
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/services.SignInForm'
      produces:
      - application/json
      responses: {}
      summary: Sign in to an existing account
      tags:
      - Account
  /account/signin/refresh:
    post:
      consumes:
      - application/json
      description: Authenticates a user using a refresh token to obtain new access
        tokens
      parameters:
      - description: Refresh token details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/services.SignInWithRefreshTokenForm'
      produces:
      - application/json
      responses: {}
      summary: Sign in using a refresh token
      tags:
      - Account
  /account/signout:
    post:
      consumes:
      - application/json
      description: Logs out the user and invalidates the session/token
      parameters:
      - description: Sign-out request details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/services.SignOutForm'
      produces:
      - application/json
      responses: {}
      summary: Sign out of the current account
      tags:
      - Account
  /account/verify:
    post:
      consumes:
      - application/json
      description: Starts the verification process for the account (email or phone)
      parameters:
      - description: Verification details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/services.VerifyAccountForm'
      produces:
      - application/json
      responses: {}
      summary: Initiate account verification
      tags:
      - Account
  /account/verify/complete:
    post:
      consumes:
      - application/json
      description: Completes the verification process using the received token
      parameters:
      - description: Verification completion details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/services.CompleteVerifyAccountForm'
      produces:
      - application/json
      responses: {}
      summary: Complete account verification
      tags:
      - Account
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
